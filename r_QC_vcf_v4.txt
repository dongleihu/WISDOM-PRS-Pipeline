check.flip.strand=function(a1.1,a1.2,a2.1,a2.2) {
	if (all(sort(c(a1.1,a1.2))==sort(c(a2.1,a2.2)))) {
		return(c(a1.1,a1.2))
	} else {
		a1.1.vec=strsplit(a1.1,'')[[1]]
		a1.2.vec=strsplit(a1.2,'')[[1]]
		a1.1.vec.flipped=a1.1.vec
		a1.2.vec.flipped=a1.2.vec
		ind1.1.A=which(a1.1.vec=='A')
		ind1.1.C=which(a1.1.vec=='C')
		ind1.1.G=which(a1.1.vec=='G')
		ind1.1.T=which(a1.1.vec=='T')
		a1.1.vec.flipped[ind1.1.A]='T'
		a1.1.vec.flipped[ind1.1.C]='G'
		a1.1.vec.flipped[ind1.1.G]='C'
		a1.1.vec.flipped[ind1.1.T]='A'
		a1.1.flipped=paste(a1.1.vec.flipped,collapse='')

		ind1.2.A=which(a1.2.vec=='A')
                ind1.2.C=which(a1.2.vec=='C')
                ind1.2.G=which(a1.2.vec=='G')
                ind1.2.T=which(a1.2.vec=='T')
                a1.2.vec.flipped[ind1.2.A]='T'
                a1.2.vec.flipped[ind1.2.C]='G'
                a1.2.vec.flipped[ind1.2.G]='C'
                a1.2.vec.flipped[ind1.2.T]='A'
                a1.2.flipped=paste(a1.2.vec.flipped,collapse='')

		if (all(sort(c(a1.1.flipped,a1.2.flipped))==sort(c(a2.1,a2.2)))) {
			return(c(a1.1.flipped,a1.2.flipped))
		} else {
			return('error')
		}
	}
}

inNameList='list_geno.txt'
inNameSNP='SNPs_Wisdom_PRS3.0_With_Alleles.txt'
#outNameErrSNP.Pre='SNPs_Error'
#inNameImiss='list_imiss.txt'
outNameErr='Problematic_Samples.txt'

list.geno=read.table(inNameList,as.is=T)
snp.info=read.table(inNameSNP,header=T,as.is=T,sep='\t')

n.snp=225
missing.cut=0.05

ncol.iid.miss=2
ncol.fmiss=6

ncol.chr.snp=3
ncol.pos.snp=2
ncol.a1.snp=4
ncol.a2.snp=5
ncol.rsid.snp=1

ncol.chr.geno=1
ncol.pos.geno=2
ncol.id.geno=3
ncol.ref.geno=4
ncol.alt.geno=5

chr.pos=paste(snp.info[,ncol.chr.snp],snp.info[,ncol.pos.snp],sep=':')
snp.info=cbind(chr.pos,snp.info)

missing.err=NULL
for (inNameGeno in list.geno[,1]) {
	geno.final=NULL
	snp.err=NULL
	outNameGeno=gsub('.vcf','_clean.vcf',inNameGeno)	
#	outNameErrSNP=paste0(outNameErrSNP.Pre,'_',gsub('.vcf','.txt',inNameGeno))

	tempID1=gsub('Geno_','',inNameGeno)
	tempsample=gsub('_228snps.vcf','',tempID1)
	tempgeno=read.table(inNameGeno,as.is=T)
	tempchr.pos=paste(tempgeno[,ncol.chr.geno],tempgeno[,ncol.pos.geno],sep=':')
	tempgeno=cbind(tempchr.pos,tempgeno)
	snp.info.in=snp.info[is.element(snp.info[,1],tempgeno[,1]),]
	snp.info.in=snp.info.in[,-1]
	tempgeno=tempgeno[,-1]	
	for (i in 1:nrow(snp.info.in)) {
		tempchr=snp.info.in[i,ncol.chr.snp]
		temppos=snp.info.in[i,ncol.pos.snp]
		tempa1=snp.info.in[i,ncol.a1.snp]
		tempa2=snp.info.in[i,ncol.a2.snp]
		tempgeno.in=tempgeno[(tempgeno[,ncol.chr.geno]==tempchr)&(tempgeno[,ncol.pos.geno]==temppos),]
		if (nrow(tempgeno.in)==1) {
			tempref=tempgeno.in[,ncol.ref.geno]
			tempalt=tempgeno.in[,ncol.alt.geno]
			alleles.new=check.flip.strand(tempref,tempalt,tempa1,tempa2)
			if (alleles.new[1]=='error') {
				tempid=paste(tempgeno.in[ncol.chr.geno],tempgeno.in[ncol.pos.geno],tempgeno.in[ncol.ref.geno],tempgeno.in[ncol.alt.geno],sep=':')
				snp.err=rbind(snp.err,tempid)
			} else {
				tempgeno.in[c(ncol.ref.geno,ncol.alt.geno)]=alleles.new
				tempgeno.in[ncol.id.geno]=snp.info.in[i,ncol.rsid.snp]
				geno.final=rbind(geno.final,tempgeno.in)
			}
		} else {
			for (j in 1:nrow(tempgeno.in)) {
				tempref=tempgeno.in[j,ncol.ref.geno]
				tempalt=tempgeno.in[j,ncol.alt.geno]
				alleles.new=check.flip.strand(tempref,tempalt,tempa1,tempa2)
				if (alleles.new[1]=='error') {
					tempid=paste(tempgeno.in[j,ncol.chr.geno],tempgeno.in[j,ncol.pos.geno],tempgeno.in[j,ncol.ref.geno],tempgeno.in[j,ncol.alt.geno],sep=':')
					snp.err=rbind(snp.err,tempid)
				} else {
					tempgeno.in[j,c(ncol.ref.geno,ncol.alt.geno)]=alleles.new
					tempgeno.in[j,ncol.id.geno]=snp.info.in[i,ncol.rsid.snp]
					geno.final=rbind(geno.final,tempgeno.in[j,])
				}
			}
		}
	}

	temprate.miss=(n.snp-nrow(geno.final))/n.snp

	inNameMiss=paste0('Missingness_',tempsample,'.imiss')
	tempimiss=read.table(inNameMiss,header=T,as.is=T)
	tempfmiss=tempimiss[1,ncol.fmiss]
	check.missing=(tempfmiss > missing.cut | temprate.miss > missing.cut)
	if (check.missing) {
		temperr=paste0(tempsample,': missing SNP=',round(temprate.miss,2),'; ','missing genotype=',round(tempfmiss,2))
		stop(temperr)
	} else {
                colnames(geno.final)=c('CHR','POS','SNP','REF','ALT',tempsample)
                write.table(geno.final,outNameGeno,quote=F,sep='\t',row.names=F)
        }
}

rm(list=ls())

